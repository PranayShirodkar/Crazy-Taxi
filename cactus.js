import {defs, tiny} from './examples/common.js';

const {
    Vector, Vector3, vec, vec3, vec4, color, hex_color, Matrix, Mat4, Light, Shape, Material, Scene,
} = tiny;
const {Triangle, Square, Tetrahedron, Windmill, Cube, Subdivision_Sphere} = defs;

class Cactus extends Shape {
    constructor() {
        super("position", "normal");
       
        this.arrays.position = Vector3.cast(
        [-2, 0, 2], [-2, 0, -2], [2, 0, -2], 
        [-2, 0, 2], [2, 0, -2], [2, 0, 2],
        [-2, 16, 2], [-2, 16, -2], [2, 16, -2], 
        [-2, 16, 2], [2, 16, -2], [2, 16, 2],
        [-2, 0, 2], [-2, 16, 2], [-2, 0, -2],
        [-2, 0, -2], [-2, 16, 2], [-2, 16, -2],
        [-2, 0, -2], [-2, 16, -2], [2, 0, -2],
        [2, 0, -2], [-2, 16, -2], [2, 16, -2],
        [2, 0, -2], [2, 16, -2], [2, 0, 2],
        [2, 0, 2], [2, 16, -2], [2, 16, 2],
        [2, 0, -2], [2, 16, -2], [2, 0, 2],
        [2, 0, 2], [2, 16, -2], [2, 16, 2],
        [-2, 0, 2], [-2, 16, 2], [2, 0, 2],
        [2, 0, 2], [-2, 16, 2], [2, 16, 2],
        [2, 16, 2], [0, 17, 0], [-2, 16, 2],
        [-2, 16, 2], [0, 17, 0], [-2, 16, -2],
        [-2, 16, -2], [0, 17, 0], [2, 16, -2],
        [2, 16, -2], [0, 17, 0], [2, 16, 2],

        [-2, 10, 2], [-6, 10, 2], [-2, 12, 2],
        [-2, 12, 2], [-6, 10, 2], [-6, 12, 2],
        [-2, 12, 2], [-6, 12, 2], [-6, 12, -2],
        [-6, 12, -2], [-2, 12, -2], [-2, 12, 2],
        [-2, 12, -2], [-6, 12, -2], [-2, 10, -2],
        [-2, 10, -2], [-6, 12, -2], [-6, 10, -2],
        [-2, 10, 2], [-6, 10, 2], [-2, 10, -2], 
        [-2, 10, -2], [-6, 10, 2], [-6, 10, -2],
        [-6, 10, 2], [-6, 18, 2], [-6, 10, -2],
        [-6, 10, -2], [-6, 18, 2], [-6, 18, -2],
        [-6, 10, 2], [-6, 18, 2], [-4, 10, 2],
        [-4, 10, 2], [-6, 18, 2], [-4, 18, 2],
        [-4, 10, 2], [-4, 18, 2], [-4, 10, -2],
        [-4, 10, -2], [-4, 18, 2], [-4, 18, -2],
        [-4, 10, -2], [-4, 18, -2], [-6, 10, -2],
        [-6, 10, -2], [-4, 18, -2], [-6, 18, -2],
        [-6, 18, -2], [-4, 18, 2], [-4, 18, -2],
        [-6, 18, -2], [-4, 18, 2], [-6, 18, 2],
        [-6, 18, 2], [-5, 19, 0], [-4, 18, 2],
        [-4, 18, 2], [-5, 19, 0], [-4, 18, -2],
        [-4, 18, -2], [-5, 19, 0], [-6, 18, -2],
        [-6, 18, -2], [-5, 19, 0], [-6, 18, 2],

        [2, 6, 2], [8, 6, 2], [2, 8, 2],
        [2, 8, 2], [8, 6, 2], [8, 8, 2],
        [2, 6, 2], [8, 6, 2], [2, 6, -2],
        [2, 6, -2], [8, 6, 2], [8, 6, -2],
        [2, 6, -2], [8, 6, -2], [2, 8, -2],
        [2, 8, -2], [8, 6, -2], [8, 8, -2],
        [2, 8, -2], [8, 8, -2], [2, 8, 2],
        [2, 8, 2], [8, 8, -2], [8, 8, 2],
        [6, 6, 2], [6, 16, 2], [8, 6, 2],
        [8, 6, 2], [6, 16, 2], [8, 16, 2],
        [8, 6, 2], [8, 16, 2], [8, 6, -2],
        [8, 6, -2], [8, 16, 2], [8, 16, -2],
        [8, 6, -2], [8, 16, -2], [6, 6, -2],
        [6, 6, -2], [8, 16, -2], [6, 16, -2],
        [6, 6, -2], [6, 16, -2], [6, 6, 2],
        [6, 6, 2], [6, 16, -2], [6, 16, 2],
        [6, 16, 2], [7, 17, 0], [8, 16, 2],
        [8, 16, 2], [7, 17, 0], [8, 16, -2],
        [8, 16, -2], [7, 17, 0], [6, 16, -2],
        [6, 16, -2], [7, 17, 0], [6, 16, 2]
        );

        this.arrays.normal = Vector3.cast(
        [-2, 0, 2], [-2, 0, -2], [2, 0, -2],
        [-2, 0, 2], [2, 0, -2], [2, 0, 2],
        [-2, 16, 2], [-2, 16, -2], [2, 16, -2], 
        [-2, 16, 2], [2, 16, -2], [2, 16, 2],
        [-2, 0, 2], [-2, 16, 2], [-2, 0, -2],
        [-2, 0, -2], [-2, 16, 2], [-2, 16, -2],
        [-2, 0, -2], [-2, 16, -2], [2, 0, -2],
        [2, 0, -2], [-2, 16, -2], [2, 16, -2],
        [2, 0, -2], [2, 16, -2], [2, 0, 2],
        [2, 0, 2], [2, 16, -2], [2, 16, 2],
        [2, 0, -2], [2, 16, -2], [2, 0, 2],
        [2, 0, 2], [2, 16, -2], [2, 16, 2],
        [-2, 0, 2], [-2, 16, 2], [2, 0, 2],
        [2, 0, 2], [-2, 16, 2], [2, 16, 2],
        [2, 16, 2], [0, 17, 0], [-2, 16, 2],
        [-2, 16, 2], [0, 17, 0], [-2, 16, -2],
        [-2, 16, -2], [0, 17, 0], [2, 16, -2],
        [2, 16, -2], [0, 17, 0], [2, 16, 2],

        [-2, 10, 2], [-6, 10, 2], [-2, 12, 2],
        [-2, 12, 2], [-6, 10, 2], [-6, 12, 2],
        [-2, 12, 2], [-6, 12, 2], [-6, 12, -2],
        [-6, 12, -2], [-2, 12, -2], [-2, 12, 2],
        [-2, 12, -2], [-6, 12, -2], [-2, 10, -2],
        [-2, 10, -2], [-6, 12, -2], [-6, 10, -2],
        [-2, 10, 2], [-6, 10, 2], [-2, 10, -2], 
        [-2, 10, -2], [-6, 10, 2], [-6, 10, -2],
        [-6, 10, 2], [-6, 18, 2], [-6, 10, -2],
        [-6, 10, -2], [-6, 18, 2], [-6, 18, -2],
        [-6, 10, 2], [-6, 18, 2], [-4, 10, 2],
        [-4, 10, 2], [-6, 18, 2], [-4, 18, 2],
        [-4, 10, 2], [-4, 18, 2], [-4, 10, -2],
        [-4, 10, -2], [-4, 18, 2], [-4, 18, -2],
        [-4, 10, -2], [-4, 18, -2], [-6, 10, -2],
        [-6, 10, -2], [-4, 18, -2], [-6, 18, -2],
        [-6, 18, -2], [-4, 18, 2], [-4, 18, -2],
        [-6, 18, -2], [-4, 18, 2], [-6, 18, 2],
        [-6, 18, 2], [-5, 19, 0], [-4, 18, 2],
        [-4, 18, 2], [-5, 19, 0], [-4, 18, -2],
        [-4, 18, -2], [-5, 19, 0], [-6, 18, -2],
        [-6, 18, -2], [-5, 19, 0], [-6, 18, 2],

        [2, 6, 2], [8, 6, 2], [2, 8, 2],
        [2, 8, 2], [8, 6, 2], [8, 8, 2],
        [2, 6, 2], [8, 6, 2], [2, 6, -2],
        [2, 6, -2], [8, 6, 2], [8, 6, -2],
        [2, 6, -2], [8, 6, -2], [2, 8, -2],
        [2, 8, -2], [8, 6, -2], [8, 8, -2],
        [2, 8, -2], [8, 8, -2], [2, 8, 2],
        [2, 8, 2], [8, 8, -2], [8, 8, 2],
        [6, 6, 2], [6, 16, 2], [8, 6, 2],
        [8, 6, 2], [6, 16, 2], [8, 16, 2],
        [8, 6, 2], [8, 16, 2], [8, 6, -2],
        [8, 6, -2], [8, 16, 2], [8, 16, -2],
        [8, 6, -2], [8, 16, -2], [6, 6, -2],
        [6, 6, -2], [8, 16, -2], [6, 16, -2],
        [6, 6, -2], [6, 16, -2], [6, 6, 2],
        [6, 6, 2], [6, 16, -2], [6, 16, 2],
        [6, 16, 2], [7, 17, 0], [8, 16, 2],
        [8, 16, 2], [7, 17, 0], [8, 16, -2],
        [8, 16, -2], [7, 17, 0], [6, 16, -2],
        [6, 16, -2], [7, 17, 0], [6, 16, 2]
        );
        
        this.indices = false;
    }
}

export {Cactus};